input {
  file {
    path => "/build/vk/logstash-6.6.1/couch.log"
#    path => [
#        "/build/srv-logs/vocms01740/coudhdb/*.log",
#        "/build/srv-logs/vocms01741/coudhdb/*.log",
#        "/build/srv-logs/vocms01742/coudhdb/*.log"
#    ]
    start_position => "beginning"
    type => "couchdb"
  }
}

filter {
  ruby {
    code => "event.set('timestamp',(event.get('@timestamp').to_f * 1000).to_i)"
  }
  if [type] == "couchdb" {
    mutate { replace => { "service" => "couchdb" } }
    # https://github.com/elastic/logstash/blob/v1.4.2/patterns/grok-patterns
    grok {
      patterns_dir => ["./patterns"]
      match => { "message" => '\[%{COUCHDATE:tstamp}\] \[%{WORD:log_level}\] \[<.*>\] %{IPORHOST:clientip} - - %{WORD:method} %{NOTSPACE:request} %{NUMBER:code:int}' }
      #match => { "message" => '\[%{GREEDYDATA:timestamp}\] \[%{WORD:log_level}\] \[<.*>\] %{IPORHOST:clientip} - - %{WORD:method} %{NOTSPACE:request} %{NUMBER:code:int}' }
    }
   grok {
      match => { "request" => '/%{WORD:system}%{UNIXPATH:uri_path}%{URIPARAM:uri_params}?' }
   }
   grok {
      match => { "uri_path" => '/.*/%{DATA:api}$' }
   }
   # https://www.elastic.co/guide/en/logstash/current/plugins-filters-date.html
   date {
   #[Tue, 05 Dec 2017 06:05:50 GMT]
      timezone => "UTC"
      match => [ "tstamp", "EEE, dd MMM yyyy HH:mm:ss ZZZ" ]
      target => "date_object"
   }
   ruby {    
       code => "event.set('rec_timestamp',event.get('date_object').to_i)"
   }  
  }
}

output {
  file {
    path => "output.log"
  }
}

#output {
#    if [type] == "apache"{
#        http {
#            http_method => post
#            url => "http://monit-logs.cern.ch:10012/"
#            id => "monit_cmsweb"
#            format => "message"
#            content_type => "application/json; charset=UTF-8"
#        }
#        }
#    }
#}
