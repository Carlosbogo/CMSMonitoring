input {
  file {
    path => "/build/srv-logs/vocms0164/frontend/access_log_20190310.txt"
    start_position => "beginning"
  }
}

# Here is an example of cmsweb record
#[10/Mar/2019:00:59:59 +0100] cmsweb.cern.ch XXX.YYY.ZZZ.AAA "GET /reqmgr2/data/request HTTP/1.1" 200 [data: 3044 in 29413 out 11256 body 70659 us ] [auth: TLSv1.2 ECDHE-RSA-AES128-GCM-SHA256 "DN" "-" ] [ref: "-" "client" ]

filter {
  if [path] =~ "access" {
    mutate { replace => { "type" => "apache_access" } }
    # https://github.com/elastic/logstash/blob/v1.4.2/patterns/grok-patterns
    grok {
      match => { "message" => '\[%{HTTPDATE:timestamp}\] %{DATA:frontend} %{IPORHOST:clientip} "%{WORD:method} %{NOTSPACE:request} %{DATA:httpversion}" %{NUMBER:status} \[data:.*\] \[auth: %{DATA:tls} %{DATA:crypto} "%{DATA:dn}".*\] \[ref: "%{DATA}.*" "%{DATA:agent}" \]' }
    }
  }
}

# for testing purposes out output to local file
output {
  file {
    path => "/tmp/logstash.log"
  }
}

# here is output for CERN MONIT system
#output {
#    if [type] == "apache"{
#        http {
#            http_method => post
#            url => "http://monit-logs.cern.ch:10012/"
#            format => "message"
#            content_type => "application/json; charset=UTF-8"
#            message => '[{"timestamp":"%{timestamp}","frontend": "%{frontend}","clientip": "%{clientip}","method": "%{method}","httpversion": "%{httpversion}","status": "%{status}","tls": "%{tls}","raw":"%{message}","crypto": "%{crypto}","dn": "%{dn}","agent": "%{agent}","host": "%{host}","path": "%{path}"}]'
#        }
#    }
#}
