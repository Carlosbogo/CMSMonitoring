-- cms job monitoring (new query)
select
job."SchedulerJobId",
job."JobId",
job."JobMonitorId",
decode(JOB."DboardJobEndId",'S',(decode(JOB."DboardGridEndId",'D','success','U','success','failed')),'failed') state,
"FinishedTimeStamp" - "StartedRunningTimeStamp" as "duration",
job."TaskJobId",
job."LocalBatchJobId",
job."VOJobId",
job."NextJobId",
job."RbId",
job."EventRange",
job."SubNodeIp",
job."LongCEId",
job."ShortCEId",
job."SiteId",
job."WNIp" as "JobWNIp",
job."DboardGridEndId",
job."DboardStatusEnterTimeStamp",
job."DboardFirstInfoTimeStamp",
job."DboardLatestInfoTimeStamp",
job."GridStatusId",
job."GridStatusReasonId",
job."GridStatusTimeStamp",
job."GridStatusSourceId",
job."GridEndStatusId",
job."GridEndStatusReasonId",
job."GridEndStatusTimeStamp",
job."GridFinishedTimeStamp",
job."ExecutableFinishedTimeStamp",
job."JobExecExitCode",
job."JobExecExitReasonId",
job."JobExecExitTimeStamp",
job."JobApplExitCode",
job."JobApplExitReasonId",
job."CreatedTimeStamp",
job."SubmittedTimeStamp",
job."ScheduledTimeStamp",
job."StartedRunningTimeStamp",
job."FinishedTimeStamp",
job."SchedulerId",
job."JobProcessingDetailsId",
job."SubAttemptStartTimeStamp",
job."SubAttemptCount",
job."UpdateStmtTimeStamp",
job."TimeOutFlag",
job."DboardGridEndStatusReasonId",
job."ExeTime",
job."NEvProc" as "NEventsProcessed",
job."NEvReq",
job."WrapCPU",
job."WrapWC",
job."ExeCPU",
job."StOutWC",
job."JobType" as "oldType",
job."StageOutSE",
job."Memory",
job."PilotFlag",
job."InputSE",
job."ParentPilotId",
job."ResubmitterFlag",
job."WNHostName",
job."AccessType",
job."JobLog",
job."TargetCE",
job."CoreCount",
job."NCores",
job."PeakRss",
task."TaskId",
task."TaskMonitorId" as "TaskName",
task."TaskCreatedTimeStamp",
task."TaskTypeId",
task."NTaskSteps",
task."TaskStatusId",
task."JdlCoreId",
task."NEventsPerJob",
task."ApplicationId",
task."ApplExecId",
task."InputCollectionId",
task."DefaultSchedulerId",
task."SubmissionToolId",
task."SubmissionUIId",
task."JobProcessingTypeId",
task."TargetCE" as "TaskTargetCE",
task."SubmissionType",
task."SubToolVerId",
task_type."Type" as "TaskType",
task_type."ValidityFlag",
task_type."GenericType",
task_type."NewGenericType" as "type",
task_type."NewType" as "jobtype",
node."IpValue" as "WNIp",
users."UserId",
users."CertId",
users."RoleId",
users."VOId",
users."UnixName",
users."GridCertificateSubject",
users."GridName",
users."SaveGridName",
users."Country" as "userCountry",
site."SiteName",
site."DisplayName",
site."SiteState",
site."SiteUniqueId",
site."SiteWWW",
site."SiteEmail",
site."SiteLocation",
site."InteractiveInterfaceFlag",
site."Country" as "siteCountry",
site."Tier",
site."SamName",
site."VOName",
site."GridMapSize",
site."SiteDBId",
site."CPU",
site."LocalStore",
site."DiskStore",
site."TapeStore",
site."WanStore",
site."NationalBandwidth",
site."OpnBandwidth",
site."JobSlots",
site."LocalMonURL",
site."Federation",
application."ApplicationVersion",
application."Application",
application."ValidityFlag" as "appValitityFlag",
submission_tool."SubmissionTool",
scheduler."SchedulerName",
input_collection."InputCollection",
input_collection."RequestTimeStamp",
input_collection."ProcessingStartedTimeStamp",
input_collection."MergingStartedTimeStamp",
input_collection."FirstAnalysisAccessTimeStamp",
input_collection."LatestAnalysisAccessTimeStamp",
input_collection."RequestedEvents",
input_collection."ProcessedEvents",
input_collection."MergedEvents",
input_collection."ProdmonDatasetId",
input_collection."Status"
from CMS_DASHBOARD.job, CMS_DASHBOARD.task, CMS_DASHBOARD.task_type, CMS_DASHBOARD.node,
  CMS_DASHBOARD.users, CMS_DASHBOARD.site, CMS_DASHBOARD.input_collection,
  CMS_DASHBOARD.application, CMS_DASHBOARD.submission_tool, CMS_DASHBOARD.scheduler
where 
  job."TaskId" = task."TaskId" 
  and task."TaskTypeId" = task_type."TaskTypeId"
  and task."UserId" = users."UserId" 
  and job."SiteId" = site."SiteId" 
  and job."SchedulerId" = scheduler."SchedulerId"
  and NODE."NodeId" = JOB."WNIp"
  and task."InputCollectionId" = input_collection."InputCollectionId"
  and task."SubmissionToolId" = submission_tool."SubmissionToolId"
  and task."ApplicationId" = application."ApplicationId" 
  and "DboardStatusId" = 'T' 
  and "DboardJobEndId" in ('S','F') 
  and "FinishedTimeStamp" >= to_date('14-07-04 00:00:00','YY-MM-DD HH24:MI:SS')
  and "FinishedTimeStamp" < to_date('14-07-05 00:00:00','YY-MM-DD HH24:MI:SS')
  and job."TimeOutFlag" != 1;