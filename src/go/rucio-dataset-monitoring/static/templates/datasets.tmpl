<!DOCTYPE html>
<html lang="en">
<head>
    <title> Go Datatable (Serverside) </title>
    <meta content="width=device-width, initial-scale=1" name="viewport">
    <!-- prepared using https://datatables.net/download/ -->
    <link
        href="https://cdn.datatables.net/v/bs5/jq-3.6.0/jszip-2.5.0/dt-1.12.1/b-2.2.3/b-colvis-2.2.3/b-html5-2.2.3/b-print-2.2.3/date-1.1.2/fc-4.1.0/fh-3.2.4/r-2.3.0/sc-2.0.7/sb-1.3.4/sp-2.0.2/sl-1.4.0/sr-1.1.1/datatables.min.css"
        rel="stylesheet"
        type="text/css"/>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.1.3/css/bootstrap.min.css" rel="stylesheet"
          type="text/css"/>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.13.1/css/bootstrap-select.css"
          rel="stylesheet"/>

    <link href="https://nightly.datatables.net/responsive/css/responsive.dataTables.min.css" rel="stylesheet">
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css" rel="stylesheet">

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.13.1/js/bootstrap-select.min.js"></script>

    <!--  Please do not delete below CSSes, important for pretty view -->
    <style>
        /*Main table font*/
        table td {
            font-size: small;
        }

        /* RseType, Dataset, LastAccess */
        table tr td:nth-child(n+1):nth-child(-n+4) {
            text-align: left;
        }

        /* LastAccess, Max, Min, Avg, Sum */
        table tr td:nth-child(n+5):nth-child(-n+11) {
            text-align: right;
        }

        /*  RSEs special color*/
        .table > tbody > tr > td.rses-style {
            color: #DC3220; !important;
        }

        /*SearchBuilder title*/
        .dtsb-titleRow {
            background-color: #F2D7D9; !important;
        }

        /*SearchBuilder group*/
        .dtsb-searchBuilder {
            border-color: #F2D7D9;
            border-bottom-width: 3px;
        }

        /*Data timestamp button style*/
        /*#timestamp-hover-button:hover {*/
        /*    border-color: #005AB5;*/
        /*    border-block-start-width: thick;*/
        /*    !*background-color: ;*!*/
        /*}*/

        /*Hover text for data timestamp*/
        .tooltip > .tooltip-inner {
            background-color: white;
            color: black;
            font-family: 'Trebuchet MS', sans-serif;
            font-size: small;
        }
    </style>
</head>
<body>

<div class="container-fluid no-padding" style="width: 100%">
    <div class="row" style="background-color: #ECF2F9">
        <div class="col-xs-6 col-sm-4">
            <footer>
                <img alt="CERN CMS O&C" src="../static/img/oc_icon.png"
                     width="60"          height="40">
            </footer>
        </div>
        <div class="col-xs-6 col-sm-4 align-self-center">
            <h3> RUCIO DATASETS MONITORING </h3>
        </div>
        <div class="col-xs-6 col-sm-4 text-right">
            <footer>
                <img alt="CERN CMS O&C" src="../static/img/oc_icon.png" style="text-align: right;"
                     width="60"          height="40">
            </footer>
        </div>
    </div>
</div>

<div class="container-fluid no-padding" style="width: 96%; background-color: #F9F9F9">
    <div class="row">
        <hr class="rounded">
    </div>

    <table class="go-datatable table table-sm table-bordered table-hover " style="border:3px solid #F0D9DA;">
        <!-- table table-sm-->
        <thead style="background-color: #C8D9EB; color: black; font-size: medium">
        <tr>
            <th></th>
            <th>Rse Type</th>
            <th>Dataset</th>
            <th>Last Access</th>
            <th>LastAccessMs</th>
            <th>Max</th>
            <th>Min</th>
            <th>Avg</th>
            <th>Sum</th>
            <th>RealSize</th>
            <th>TotalFileCnt</th>
            <th>RSEs</th>
        </tr>
        </thead>
        <tfoot hidden>
        <tr>
            <th></th>
            <th>Rse Type</th>
            <th>Dataset</th>
            <th>Last Access</th>
            <th>LastAccessMs</th>
            <th>Max</th>
            <th>Min</th>
            <th>Avg</th>
            <th>Sum</th>
            <th>RealSize</th>
            <th>TotalFileCnt</th>
            <th>RSEs</th>
        </tr>
        </tfoot>
    </table>
</div>

<div class="footer" style="bottom: 0px; width: 100%;background-color: #262626;border-top: 1px solid #333;">
    <img alt='CERN' src='../static/img/LogoOutline-White.svg' style="height: 70px;margin: 20px;">
</div>

<!-- prepared using https://datatables.net/download/ -->
<script
    src="https://cdn.datatables.net/v/bs5/jq-3.6.0/jszip-2.5.0/dt-1.12.1/b-2.2.3/b-colvis-2.2.3/b-html5-2.2.3/b-print-2.2.3/date-1.1.2/fc-4.1.0/fh-3.2.4/r-2.3.0/sc-2.0.7/sb-1.3.4/sp-2.0.2/sl-1.4.0/sr-1.1.1/datatables.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.1.3/js/bootstrap.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js" type="text/javascript"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js" type="text/javascript"></script>
<script src="https://nightly.datatables.net/responsive/js/dataTables.responsive.min.js" type="text/javascript"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/multiple-select/1.1.0/jquery.multiple.select.min.js"
        type="text/javascript"></script>
<script src="https://cdn.datatables.net/searchbuilder/1.3.4/js/dataTables.searchBuilder.min.js"
        type="text/javascript"></script>

<script>
    // This counter will be used to get the first opening of the page.
    //     If short url is used, parent URL will be changed to main pages (../)
    var global_initialization_counter = 0

    // Global variable to catch latest datatables request
    var global_dt_request_holder = null;

    // Define short url will be used or not
    var isShortUrl = ({{.is_short_url}} === "true");

    // hHlds saved state json string
    var global_saved_state_setter = null;

    // If short url, get saved state from the GoLang controller Template
    if (isShortUrl === true) {
        global_saved_state_setter = {{.dt_saved_state}};
        global_saved_state_setter = JSON.stringify(global_saved_state_setter);
    }

    console.log("Is short url: " + isShortUrl);

    // ---------~~~~~~~~~  FUNCTIONS AND MAIN DEFINITIONS ~~~~~~~~~---------
    // Required to show text on hover, used for data timestamp hover setting
    $(function () {
        $('[data-toggle="tooltip"]').tooltip()
    })

    /*
     * helperBytesToHumanely
     *   Converts bytes to human-readable format KB,MB,GB,TB,PB,EB(max) with 2 decimals
     *   If you want to implement ZB, YB, etc., you need to modify Go controller that parses these values
     *   Size data stored as bytes in integer format.
     */
    helperBytesToHumanely = function (input_bytes) {
        if (input_bytes === 0) {
            return "0.00 B";
        }
        var e = Math.floor(Math.log(input_bytes) / Math.log(1024));
        return (input_bytes / Math.pow(1024, e)).toFixed(2) + ' ' + ' KMGTPE'.charAt(e) + 'B';
    }

    /*
     * helperCopyToClipboard
     *   Helper function to copy given data to clipboard
     */
    function helperCopyToClipboard(message) {
        var textArea = document.createElement("textarea");
        textArea.value = message;
        textArea.style.opacity = "0";
        document.body.appendChild(textArea);
        textArea.focus();
        textArea.select();
        try {
            var successful = document.execCommand('copy');
            // var msg = successful ? 'successful' : 'unsuccessful';
            alert('Copying successful:' + message);
        } catch (err) {
            alert('Unable to copy value , error : ' + err.message);
        }
        document.body.removeChild(textArea);
    }

    /*
     * getShortUrl
     *   Mainly it gets short url from '../api/short-url' API call when "Copy state link to clipboard" button clicked.
     *     short url creation requires a request which should be a JSON object {"dt_request": .., "saved_state": .. }
     *     "dt_request" holds saved last fired datatables request
     *     "saved_state" holds last state(HTML, CSS, DataTables, SearchBuilder, page, sort order, etc.) ...
     *      ... which is important to share the exact state(page number, sort order, etc).
     *     Go controller gets this request, converts to json string and gets its MD5 hash to not save same requests again and again
     *     Go controller returns MD5 hash id to JS ajax call below
     *     And function writes MD5 hash id to clipboard with page origin url
     */
    function getShortUrl() {
        $.ajax({
            url: '../api/short-url',
            type: 'post',
            contentType: 'application/json',
            data: JSON.stringify({
                "dt_request": JSON.parse(global_dt_request_holder),
                "saved_state": JSON.parse(global_saved_state_holder),
            }),
            success: function (data) {
                // Call copy clipboard here
                origin = window.location.origin
                helperCopyToClipboard(origin + '/short-url/' + data);
            },
            error: function () {
                alert('Copy failed');
            }
        });
    }

    /*
     * DataTables engine is starting to run ...
     */
    $(document).ready(function () {

        /*
        * showRseDetails
        *   Shows detailed individual dataset information when green "+" button clicked
        *   It uses a Go controller which returns data from detailed_datasets collection
        *   How it works:
        *     Gets closest "tr" row of the clicked "+" button
        *     Gets dataset value from this "tr" dom element.
        *       This is tricky because, "details-value-dataset" Class should be added to "Dataset" td(column) dom.
        *       Thanks to DataTables, we can add html class to column elements using "className" in the DT columns array
        *     Gets RseType value from this "tr" dom element same with "Dataset" using className.
        *     Creates a random string to create a temporary div with unique ID for each clicked row.
        *     Stores default background color, changes it to our color and after row is collapsed restore its background color
        *     Sends ajax request to  `../api/rse-detail' API with a JSON request body: {"dataset": .., "type": ..} which defines the dataset.
        *     Gets html response which is sent by the Go controller.
        *        Go controller uses "rse_detail_table.html" template which is also uses DataTables to show pretty table
        *        To not mix current DataTable CSS and "rse_detail_table" CSS, we used random ids and other tricks like "!important;".
        *     And with ".html" function call, response html element showed in the dom.
        *     Thanks to "dt-control", it allows to collapse and expand with green/red color changes.
        */
        function showRseDetails() {
            var tr = $(this).closest("tr");
            dataset_name = $(tr).find("td.details-value-dataset").text()
            type_name = $(tr).find("td.details-value-rse-type").text()
            random_str = Math.random().toString(36).slice(-10)
            d_class = "details-show"
            row = table.row(tr)
            if (!row.child.isShown()) {
                default_bg_color = $(tr).css("background-color");
                $(tr).addClass(d_class)
                $(tr).css("background-color", "#F9ECEC")
                row.child("<div id='" + type_name + random_str + "'>loading</div>").show()
                var single_dataset_request = {
                    "dataset": dataset_name,
                    "type": type_name
                }
                //console.log(JSON.stringify(single_dataset_request))
                $.ajax({
                    url: '../api/rse-detail',
                    type: 'post',
                    dataType: 'html',
                    contentType: 'application/json',
                    data: JSON.stringify(single_dataset_request),
                    success: function (data) {
                        // just to assign random div id
                        $("#" + type_name + random_str).html(data);
                    },
                });
                tr.addClass('selected-row-color')
            } else {
                $(tr).removeClass(d_class)
                $(tr).css("background-color", default_bg_color)
                row.child.hide()
            }
        }

        /*
         * DataTables engine is running at full speed ...
         *    All below settings are important, even a single character.
         *    Please read lots of nice documentation, examples, blogs, great community Q&A in https://datatables.net/
         *      to understand what it is happening.
         */
        var table = $('.go-datatable').DataTable({
            serverSide: true,
            processing: true,
            stateSave: true,
            select: false,
            scrollX: false,
            pageLength: 10,
            order: [], // no initial sorting
            dom: "iBQplrt", // no main search ("f"), just individual column search
            language: {
                searchBuilder: {
                    title: 'Search Builder | <span style="font-size: 10px">please hit enter after all conditions</span'
                },
            },
            stateSaveCallback: function (settings, data) {
                // Save the last state to "global_saved_state_holder" variable to use in the short url call
                global_saved_state_holder = JSON.stringify(data)
                console.log(global_saved_state_holder);
            },
            stateLoadCallback: function (settings) {
                // "global_saved_state_setter" given by Go Template, so it restore same state for the shared users.
                console.log(global_saved_state_setter)
                return JSON.parse(global_saved_state_setter);
            },
            // stateLoadParams: function (settings, data) {
            // },
            // stateSaveParams: function (setting, data){
            // },
            aLengthMenu: [
                [5, 10, 25, 50, 100],
                [5, 10, 25, 50, 100]
            ],
            ajax: {
                url: "../api/datasets",
                method: "POST",
                contentType: 'application/json',
                data: function (d) {
                    // What is d: d is main DataTable request which will be sent to API

                    // Increment counter, to control first opening of the page
                    global_initialization_counter++;

                    // SearchBuilder request holder variable
                    var sbRequest = null;

                    // Check if user created a search builder query using SB Conditions
                    try {
                        sbRequest = table.searchBuilder.getDetails(true);
                        console.log(JSON.stringify(sbRequest));
                    } catch (error) {
                        // User did not create SearchBuilder query, so set the request holder variable as null
                        sbRequest = null;
                    }
                    // Add SearchBuilder JSON object to DataTable main request
                    d.search_builder = sbRequest;

                    // Check if short url is used
                    if (isShortUrl === true) {
                        // Set datatable request from saved short-url request using go template
                        // So we modify the DataTable request with the shared url request stored and fetched from MongoDB
                        d = {{.dt_request_short_url}}
                        global_dt_request_holder = JSON.stringify(d);

                        // Since all operations for short url is done, we need to set it to false
                        isShortUrl = false;

                        // Change origin url to main page for further request of users who used short url
                        if (global_initialization_counter===1 ) {
                            window.history.pushState('', 'Title', '../');
                        }
                    }else{
                        global_dt_request_holder = JSON.stringify(d);
                    }
                    console.log(global_dt_request_holder);
                    return global_dt_request_holder;
                },
                dataType: "json",
            },
            search: {
                // Run search on enter effectively, works in SearchBuilder too
                return: true
            },
            searchBuilder: {
                // SearchBuilder customizations to limit conditions
                columns: [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12], // Remove LastAccessMs from search builder columns since we'll use only LastAccess
                greyscale: true,
                conditions: {
                    // "num" type hacking. "num" always parse numeric values, but we need whole string like "10TB"
                    // that's why we use "html" type, but it will be used in numeric columns
                    // IN SHORT:
                    //     - html: float type columns
                    //     - date: date type columns
                    //     - num:  integer type columns
                    html: {
                        // "num" type will have only "starts":Greater Than" and "ends":"Less Than" conditions
                        'starts': {
                            conditionName: 'Greater Than',
                        },
                        'ends': {
                            conditionName: 'Less Than',
                        },
                        '=': null,
                        '!=': null,
                        '!starts': null,
                        '!contains': null,
                        '!ends': null,
                        'null': null,
                        '!null': null,
                        'contains': null,
                    },
                    string: {
                        // "string" type will have only "contains" condition which will use Regex search in Go controller.
                        '=': null,
                        '!=': null,
                        'starts': null,
                        '!starts': null,
                        '!contains': null,
                        'ends': null,
                        '!ends': null,
                        'null': null,
                        '!null': null,
                        'contains': {
                            conditionName: 'regex',
                        },
                    },
                    date: {
                        // "date" type will have only ">", "<", "between", "null" and "!null" conditions
                        '=': null,
                        '!=': null,
                        '!between': null,
                    },
                    num: {
                        // "int" type will have only ">", "<", "between", "null" and "!null" conditions
                        '=': null,
                        '!=': null,
                        '!between': null,
                        '<=': null,
                        '>=': null,
                    }
                }
            },
            columns: [
                {
                    // Details green/red "+"/"-" button
                    data: null, className: 'dt-control', orderable: false, defaultContent: '',
                },
                {
                    data: "RseType",
                    className: "details-value-rse-type",
                    name: 'Rse Type',
                    searchBuilder: {
                        defaultCondition: "contains"
                    },
                },
                {
                    data: "Dataset",
                    className: "details-value-dataset",
                    searchBuilder: {
                        defaultCondition: "contains"
                    },
                },
                {
                    data: "LastAccess",
                    searchBuilder: {
                        defaultCondition: ">"
                    },
                    // orderData uses 4th column "LastAccessMs" as ordering column, arrange it accordingly
                    orderData: 4,
                },
                {
                    // "LastAccess" column uses this column ordering column, arrange it accordingly
                    data: "LastAccessMs",
                    visible: false,
                },
                {
                    data: "Max",
                    render: function (data, type, row, meta) {
                        // SearchBuilder will use raw data as search values, but display will be human-readable size format.
                        return type === 'display' ? helperBytesToHumanely(data) : data;
                    },
                    // orderSequence defines first option when clicked to Columns sort button. We set first as "desc", default was "asc".
                    orderSequence: ["desc", "asc"],
                    searchBuilderType: 'html',
                },
                {
                    data: "Min",
                    render: function (data, type, row, meta) {
                        // SearchBuilder will use raw data as search values, but display will be human-readable size format.
                        return type === 'display' ? helperBytesToHumanely(data) : data;
                    },
                    orderSequence: ["desc", "asc"],
                    searchBuilderType: 'html',
                },
                {
                    data: "Avg",
                    render: function (data, type, row, meta) {
                        // SearchBuilder will use raw data as search values, but display will be human-readable size format.
                        return type === 'display' ? helperBytesToHumanely(data) : data;
                    },
                    orderSequence: ["desc", "asc"],
                    searchBuilderType: 'html',
                },
                {
                    data: "Sum",
                    render: function (data, type, row, meta) {
                        // SearchBuilder will use raw data as search values, but display will be human-readable size format.
                        return type === 'display' ? helperBytesToHumanely(data) : data;
                    },
                    orderSequence: ["desc", "asc"],
                    searchBuilderType: 'html',
                },
                {
                    data: "RealSize",
                    render: function (data, type, row, meta) {
                        // SearchBuilder will use raw data as search values, but display will be human-readable size format.
                        return type === 'display' ? helperBytesToHumanely(data) : data;
                    },
                    orderSequence: ["desc", "asc"],
                    searchBuilderType: 'html',
                },
                {
                    data: "TotalFileCnt",
                    searchBuilderType: 'num',
                },
                {
                    data: "RSEs",
                    className: "rses-style",
                    searchBuilder: {
                        defaultCondition: "contains"
                    },
                }
            ],
            buttons: [
                {
                    extend: 'copyHtml5',
                    className: "btn btn-primary",
                    exportOptions: {
                        columns: ':visible'
                    }
                },
                {
                    extend: 'excelHtml5',
                    className: "btn btn-primary",
                    exportOptions: {
                        columns: ':visible'
                    }
                },
                {
                    extend: 'pdfHtml5',
                    className: "btn btn-primary",
                    exportOptions: {
                        columns: ':visible'
                    }
                },
                {
                    extend: 'colvis',
                    className: "btn btn-primary",
                },
                {
                    text: 'Copy state link to clipboard',
                    className: "btn btn-primary",
                    action: function (e, dt, node, config) {
                        getShortUrl();
                        // navigator.clipboard.writeText is not working because of https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts
                    }
                },
                {
                    className: 'btn btn-light glyphicon glyphicon-time',
                    text: 'DataTimestamp: {{.data_timestamp}}',
                    titleAttr: "This table is produced with the data of Rucio and DBS sqoop dumps runs in between 6:30AM-7:15AM CERN time",
                },
                {
                    className: 'btn btn-light',
                    text: '<a href="">GitHub Repo</a>',
                    titleAttr: "If you see any bug, please open issue!",
                    action: function (e, dt, node, config)
                    {
                        //This will send the page to the location specified
                        window.open("https://github.com/dmwm/CMSMonitoring/tree/master/src/go/rucio-dataset-monitoring", "_blank");
                    }
                }
            ]
        });
        // Add event listener for opening and closing details
        table.on('click', 'td.dt-control', showRseDetails);
    });
</script>
</body>
</html>
