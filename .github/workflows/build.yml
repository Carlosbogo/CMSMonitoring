name: Build

on:
  push:
    tags:
      - '*.*.*'

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

#     - name: Get dependencies
#       run: |
#         go get github.com/vkuznet/x509proxy
#         go get github.com/buger/jsonparser
#         go get github.com/pkg/profile
#         go get github.com/stretchr/testify
#         go get github.com/go-stomp/stomp
#         go get github.com/elastic/go-elasticsearch
#         go get github.com/nats-io/nats.go
#         go get github.com/dmwm/cmsauth
#         go get github.com/sirupsen/logrus
#         go get github.com/prometheus/client_golang/prometheus
#         go get github.com/prometheus/client_golang/prometheus/promhttp
#         go get github.com/prometheus/common/log
#         go get github.com/prometheus/common/version
#         go get github.com/shirou/gopsutil/cpu
#         go get github.com/shirou/gopsutil/mem
#         go get github.com/shirou/gopsutil/load
#         go get github.com/shirou/gopsutil/process

    - name: Build
      run: |
        mkdir cmsmon-tools
        cd src/go/MONIT
        go build -o monit monit.go
        go build -o alert alert.go
        go build -o annotationManager annotationManager.go
        go build -o datasources datasources.go
        go build -o ggus_alerting ggus_alerting.go
        go build -o ggus_parser ggus_parser.go
        go build -o intelligence intelligence.go
        go build -o ssb_alerting ssb_alerting.go
        go build -o es_exporter es_exporter.go
        mv monit alert annotationManager datasources ggus_alerting \
          ggus_parser intelligence ssb_alerting es_exporter ../../../cmsmon-tools
        cd ../NATS
        go build -o dbs_vm dbs_vm.go
        go build -o nats-pub nats-pub.go
        go build -o nats-sub nats-sub.go
        mv dbs_vm nats-pub nats-sub ../../../cmsmon-tools
        cd ../../../
        tar cfz cmsmon-tools.tar.gz cmsmon-tools

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload binaries
      id: upload-cmsmon-tools
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./cmsmon-tools.tar.gz
        asset_name: cmsmon-tools.tar.gz
        asset_content_type: application/octet-stream

    - name: Get the Ref
      id: get-ref
      uses: ankitvgupta/ref-to-tag-action@master
      with:
        ref: ${{ github.ref }}
        head_ref: ${{ github.head_ref }}

    - name: Login to Registry
      uses: docker/login-action@v1.6.0
      with:
        registry: docker.pkg.github.com
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Build cmsmon-intelligence image
      run: |
        curl -ksLO https://raw.githubusercontent.com/dmwm/CMSKubernetes/master/docker/cmsmon-intelligence/Dockerfile
        sed -i -e "s,ENV TAG=.*,ENV TAG=${{steps.get-ref.outputs.tag}},g" Dockerfile
        docker build . --tag docker.pkg.github.com/dmwm/cmsmon-intelligence/cmsmon-intelligence

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        load: true
        tags: cmssw/cmsmon-intelligence:${{steps.get-ref.outputs.tag}}
    - run: docker push cmssw/cmsmon-intelligence:${{steps.get-ref.outputs.tag}}

    - name: Build cmsmon-alerts image
      run: |
        curl -ksLO https://raw.githubusercontent.com/dmwm/CMSKubernetes/master/docker/cmsmon-alerts/Dockerfile
        sed -i -e "s,ENV TAG=.*,ENV TAG=${{steps.get-ref.outputs.tag}},g" Dockerfile
        docker build . --tag docker.pkg.github.com/dmwm/cmsmon-alerts/cmsmon-alerts

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        load: true
        tags: cmssw/cmsmon-alerts:${{steps.get-ref.outputs.tag}}
    - run: docker push cmssw/cmsmon-alerts:${{steps.get-ref.outputs.tag}}
