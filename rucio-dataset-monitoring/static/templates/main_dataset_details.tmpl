<div>
    <table class="details-table table table-condensed" id="detailed-datasets"
           style="background-color: white; font-size: x-small; font-family: 'Trebuchet MS', sans-serif;
           border:4px solid black;">
        <thead>
        <tr>
            <th scope="col">Type</th>
            <th scope="col">Dataset</th>
            <th scope="col">RSE</th>
            <th scope="col">Tier</th>
            <th scope="col">C</th>
            <th scope="col">RseKind</th>
            <th scope="col">Size</th>
            <th scope="col">Size</th>
            <th scope="col">Last Access</th>
            <th scope="col">Is Fully Replicated</th>
            <th scope="col">Is Locked</th>
            <th scope="col">% File in RSE</th>
            <th scope="col">#Files in RSE</th>
            <th scope="col">#Accessed Files</th>
            <th scope="col">#Blocks in RSE</th>
            <th scope="col">#Prod Locked Blocks in RSE</th>
            <th scope="col">Prod Lock Accounts</th>
            <th scope="col">Block Rules</th>
        </tr>
        </thead>
        <tbody>
        {{range .data}}
        <tr style="font-size: x-small; font-family: 'Trebuchet MS', sans-serif;">
            <td class="nowrap" style="font-size: x-small; font-family: 'Trebuchet MS', sans-serif;">{{.Type}}</td>
            <td style="font-size: x-small; font-family: 'Trebuchet MS', sans-serif;">{{.Dataset}}</td>
            <td style="font-size: x-small; font-family: 'Trebuchet MS', sans-serif;">{{.RSE}}</td>
            <td style="font-size: x-small; font-family: 'Trebuchet MS', sans-serif;">{{.Tier}}</td>
            <td style="font-size: x-small; font-family: 'Trebuchet MS', sans-serif;">{{.C}}</td>
            <td style="font-size: x-small; font-family: 'Trebuchet MS', sans-serif;">{{.RseKind}}</td>
            <td style="font-size: x-small; font-family: 'Trebuchet MS', sans-serif;">{{.SizeBytes}}</td>
            <td style="font-size: x-small; font-family: 'Trebuchet MS', sans-serif;">{{.SizeBytes}}</td>
            <td style="font-size: x-small; font-family: 'Trebuchet MS', sans-serif;">{{.LastAccess}}</td>
            <td style="font-size: x-small; font-family: 'Trebuchet MS', sans-serif;">{{.IsFullyReplicated}}</td>
            <td style="font-size: x-small; font-family: 'Trebuchet MS', sans-serif;">{{.IsLocked}}</td>
            <td style="font-size: x-small; font-family: 'Trebuchet MS', sans-serif;">{{.FilePercentage}}</td>
            <td style="font-size: x-small; font-family: 'Trebuchet MS', sans-serif;">{{.FileCount}}</td>
            <td style="font-size: x-small; font-family: 'Trebuchet MS', sans-serif;">{{.AccessedFileCount}}</td>
            <td style="font-size: x-small; font-family: 'Trebuchet MS', sans-serif;">{{.BlockCount}}</td>
            <td style="font-size: x-small; font-family: 'Trebuchet MS', sans-serif;">{{.ProdLockedBlockCount}}</td>
            <td style="font-size: x-small; font-family: 'Trebuchet MS', sans-serif;">{{.ProdAccounts}}</td>
            <td style="font-size: x-small; font-family: 'Trebuchet MS', sans-serif;">{{.BlockRuleIDs}}</td>
        </tr>
        {{end}}
        </tbody>
    </table>
</div>
<script>
    bytesToHumanelyDetailDt = function (input_bytes) {
        if (input_bytes === 0) {
            return "0.00 B";
        }
        var e = Math.floor(Math.log(input_bytes) / Math.log(1000));
        return (input_bytes / Math.pow(1000, e)).toFixed(2) + ' ' + ' KMGTPEZY'.charAt(e) + 'B';
    }
    $(document).ready(function () {
        // To be able to expand/collapse multiple rows, each datatable ID should be different
        random_detailed_id_str = Math.random().toString(36).slice(-10)
        document.getElementById("detailed-datasets").setAttribute("id", random_detailed_id_str);
        $('#' + random_detailed_id_str).DataTable({
            dom: "it",
            pageLength: 500,
            order: [[6, 'desc']],
            columnDefs: [
                {
                    // SizeBytes will be hidden
                    target: 6, visible: false, searchable: false
                },
                {
                    // Size will use SizeBytes to correctly order
                    data: "Size",
                    target: 7,
                    orderData: 6,
                    render: function (data, type, row, meta) {
                        return bytesToHumanelyDetailDt(data);
                    },
                    orderSequence: ["desc", "asc"],
                },
            ],
        });
    });
</script>
